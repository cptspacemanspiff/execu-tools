{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "test_tokenizer_converters",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/python/tests/test_tokenizer_converters.py",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "manual_test_model_export",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/python/tests/manual_test_model_export.py",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "manual_encoder_decoder_export",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/python/tests/manual_encoder_decoder_export.py",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "test_encoder_decoder_export",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/python/tests/test_encoder_decoder_export.py",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "test_export_behavior",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/python/tests/test_export_behavior.py",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Python Debugger: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        },
        {
            "name": "Inspector CLI",
            "type": "debugpy",
            "request": "launch",
            "module": "executorch.devtools.inspector.inspector_cli",
            "args": [
                "--etdump_path",
                "${workspaceFolder}/python/tests/export_artifacts/EncoderDecoderWrapper/opus_encoder_decoder_model.etdump",
                "--etrecord_path",
                "${workspaceFolder}/python/tests/export_artifacts/EncoderDecoderWrapper/opus_encoder_decoder_model.etrecord",
                "--module_name",
                "EncoderDecoderWrapper",
                "--method_name",
                "decode"
            ],
            // "args": [
            //     "--etdump_path",
            //     "${workspaceFolder}/python/tests/export_artifacts/StatefulModel/stateful_model.etdump",
            //     "--etrecord_path",
            //     "${workspaceFolder}/python/tests/export_artifacts/StatefulModel/stateful_model.etrecord"
            // ],
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "cpp encoder decoder runner",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/cpp/build/stage/bin/ExecuToolsEncoderDecoder",
            "args": [
                "--model",
                "${workspaceRoot}/python/tests/export_artifacts/EncoderDecoderWrapper/opus_encoder_decoder_model.pte",
                "--input",
                "When the night has come and the land is dark.","Hello World",
            ],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "ninja build"
        },
        {
            "name": "cpp module test",
            "type": "cppdbg",
            "request": "launch",
            // "program": "${workspaceRoot}/cpp/build/stage/bin/ExecuToolsUnitTests",
            "program": "${workspaceRoot}/cpp/build/stage/bin/ExecuToolsModuleTest",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "ninja build"
        },
        {
            "name": "cpptest",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/cpp/build/_deps/executorch/cmake_out_lto_build/test_main",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ],
            // "preLaunchTask": "ninja build"
        },
    ]
}